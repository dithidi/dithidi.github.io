---
tags: post
layout: post
title: "A Case for Another Framework: (Part 1) Introduction"
date: 2022-07-01
formattedDate: July 1st 2022
---
<p>Have you ever sat down and thought to yourself, "Boy, there needs to be another framework for PHP out there so people have even more choices?" No? Congratulations, you have decided not to contribute to confusing young people by offering them yet another framework to choose from. If you are me however, you want to build your own framework because the framework you have consistently used for 5+ years now feels a little bloated and over the top.</p>

<p>Don't get me wrong. I love Laravel. It hit its stride in version 5 and never looked back. But maybe that's not a good thing. After working on large-scale applications using Laravel for 5 years now, I can say one thing about the framework that I wish I couldn't - it's slow. There are plenty of articles out there on the interwebs discussing the slowness of Laravel but no one seems to care. Personally being a little slow is actually a pretty decent tradeoff when building a large-scale application and you want a solidly tested and battle-proven framework to back up your stack. But what if I don't want to settle like that anymore? It was about a year ago now that I started to ask myself this very question. Why am I ok that this is slow? Should I be ok with this? What could I do to make it better? That lead me to a personal passion project of building my own PHP framework.</p>

<p>When I first started this journey, my goal wasn't to actually complete a framework for use. My goal was to actually see if Laravel was really that slow. I also had a desire to learn what makes Laravel tick and if that could be improved upon in a more friendly way as opposed to sugaring up literally every bit of functionality to the point where the actual code is unrecognizable. Maybe that's an exaggeration, but it keeps me on point.</p>

<p>So my goal was to create my own PHP framework in a stupid simple way that will ultimately allow a developer to write code that resembles Laravel, but executes that code in an entirely different way. Hopefully...by doing so...the execution time will drastically decrease.</p>

<p>I plan on making a series of posts that documents my journey through the development of this framework. At this point, I've even built a CMS application that functions at lightning speed. Join me next time when I go over my philosophy for writing the front controller and main application class. From here on out there will be code examples, etc. for your viewing pleasure.</p>

<p>Until then, you can check out the framework here: <a href="https://github.com/dithidi/nebula_php_framework" target="_blank">https://github.com/dithidi/nebula_php_framework</a></p>
